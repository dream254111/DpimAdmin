<script type="text/x-template" id="template-page-re">
    <div>
        <div class="wrapper">
            <header class="main-header">
                <!-- Logo -->
                <a href="#" v-on:click.prevent="" class="logo">
                    <!-- mini logo for sidebar mini 50x50 pixels -->
                    <span class="logo-mini"><b>RE</b></span>
                    <!-- logo for regular state and mobile devices -->
                    <span class="logo-lg">Mango <b>RE</b></span>
                </a>
                <!-- Header Navbar: style can be found in header.less -->
                <nav class="navbar navbar-static-top">
                    <!-- Sidebar toggle button-->
                    <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                        <span class="sr-only">Toggle navigation</span>
                        <span style="margin-left:25px">{{pageTitle}}</span>
                    </a>
                    <div class="navbar-custom-menu">
                        <ul class="nav navbar-nav">
                            <li>
                                <a href="#" data-toggle="control-sidebar"><i class="fa fa-user" style="margin-right:10px"></i>{{(auth.userid || '').toUpperCase()}}</a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </header>
            <!-- Left side column. contains the logo and sidebar -->
            <aside class="main-sidebar">
                <!-- sidebar: style can be found in sidebar.less -->
                <section class="sidebar">

                    <menu-re ref="menu"></menu-re>
                </section>
                <!-- /.sidebar -->
            </aside>
            <!-- Content Wrapper. Contains page content -->

            <div class="content-wrapper" style="background: #eee url('@(Url.Content("~/images/main_bg.png"))') right no-repeat; ">
                <!-- Content Header (Page header) -->
                <section class="content-header">
                    <h1>
                        <slot name="title"></slot>
                    </h1>
                    @*<ol class="breadcrumb">
                            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                            <li class="active">Dashboard</li>
                        </ol>*@
                </section>
                <!-- Main content -->
                <section class="content">
                    <slot name="body"></slot>
                </section>
                <!-- /.content -->
            </div>
            <!-- /.content-wrapper -->
            <footer class="main-footer">
                <div class="pull-right hidden-xs">
                    <b>Build No. : </b> @(AppInfo.Version)
                </div>
                <strong>&copy; {{year===2018 ? '2018':`2018-${year}`}} Mango Consultant Co., Ltd.</strong>
            </footer>
            <!-- Control Sidebar -->
            <aside class="control-sidebar control-sidebar-dark">
                <!-- Create the tabs -->
                <ul class="nav nav-tabs nav-justified control-sidebar-tabs">
                    <li class="active"><a href="#control-sidebar-home-tab" data-toggle="tab"><i class="fa fa-user"></i></a></li>
                    <li><a href="#control-sidebar-settings-tab" data-toggle="tab"><i class="fa fa-bell"></i></a></li>
                    <li><a href="#control-sidebar-settings-tab-2" data-toggle="tab"><i class="fa fa-gears"></i></a></li>
                </ul>
                <!-- Tab panes -->
                <div class="tab-content">
                    <!-- Home tab content -->
                    <div class="tab-pane active" id="control-sidebar-home-tab">
                        <h3 class="control-sidebar-heading">{{auth.empname}}</h3>
                        <h4 class="control-sidebar-heading">{{auth.mainname}}</h4>
                        <ul class="control-sidebar-menu">
                            <li>
                                <a href="#" v-on:click.prevent="logoutClick()">
                                    <i class="menu-icon fa fa-key bg-red"></i>
                                    <div class="menu-info">
                                        <h4 class="control-sidebar-subheading">{{ui.log_out}}</h4>
                                    </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /.tab-pane -->
                    <!-- Settings tab content -->
                    <div class="tab-pane" id="control-sidebar-settings-tab">
                        <h4 class="control-sidebar-heading">{{ui.notification}}</h4>
                    </div>
                    <!-- /.tab-pane -->
                    <!-- Settings tab content -->
                    <div class="tab-pane" id="control-sidebar-settings-tab-2">
                        <h4 class="control-sidebar-heading">{{ui.user_setting}}</h4>
                        <ul class="control-sidebar-menu">
                            <li>
                                <a href="javascript:void(0)">
                                    <i class="menu-icon fa fa-key bg-yellow"></i>
                                    <div class="menu-info">
                                        <h4 class="control-sidebar-subheading">{{ui.change_password}}</h4>
                                    </div>
                                </a>
                            </li>
                            <li>
                                <a href="#" v-on:click.prevent="changeLanguage()">
                                    <i class="menu-icon fa fa-globe bg-aqua"></i>
                                    <div class="menu-info">
                                        <h4 class="control-sidebar-subheading">{{ui.select_language}}</h4>
                                    </div>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /.tab-pane -->
                </div>
            </aside>
            <!-- /.control-sidebar -->
            <!-- Add the sidebar's background. This div must be placed
            immediately after the control sidebar -->
            <div class="control-sidebar-bg"></div>
        </div>
        <!-- ./wrapper -->
        <!-- Modal : Language Selected -->
        <modal ref="langSelector">
            <template slot="header">
                <h3>{{ui.select_language}}</h3>
            </template>
            <template slot="body">
                <div class="list-group">
                    <a href="#" v-on:click.prevent="selectUiLang(x)" class="list-group-item list-group-item-action" v-for="x in uiLangList" v-bind:class="{'active':x===uiLangActive}">
                        {{x}}
                    </a>
                </div>
            </template>
        </modal>
    </div>
</script>
<script>
    Vue.component('page-re', {
        template: '#template-page-re',
        data() {
            return {
                year: moment().year(),
                pageTitle: '',
                auth: reAuth,
                ui: uiLang,
                uiLangList: uiLangList,
                uiLangActive: uiLangActive
            };
        },
        methods: {
            logoutClick() {
                $.confirm({
                    title: '<i class="fa fa-sign-out-alt"></i> ' + this.ui.log_out,
                    content: this.ui.log_out_message,
                    theme: 'supervan',
                    buttons: {
                        logOutThis: {
                            text: this.ui.this_device,
                            btnClass: 'btn-default',
                            //keys: ['enter', 'shift'],
                            action: function () {
                                window.location = baseUrl + 'AuthenticationAPI/logout?all=false';
                            }
                        },
                        logOutAll: {
                            text: this.ui.all_devices,
                            btnClass: 'btn-default',
                            //keys: ['enter', 'shift'],
                            action: function () {
                                window.location = baseUrl + 'AuthenticationAPI/logout?all=true';
                            }
                        },
                        cancel: {
                            text: this.ui.cancel,
                            btnClass: 'btn-default',
                            //keys: ['enter', 'shift'],
                            action: function () {

                            }
                        },
                    }
                });
            },
            // SignalR
            signalR() {
                let vuec = this;
                let reHub = SJ.iwc.SignalR.getHubProxy('erpHub', {
                    client: {
                        displayMsg: function (msg) {
                            console.log(msg);
                        },
                        welcomeMessage: function (text) {
                            console.log(text);
                        },
                        logout: function () {
                            window.location = baseUrl + 'AuthenticationApi/Logout';
                        },
                        displaySessionOn: function (sessionsOn, sessionsMax) {
                            //vuec.$set(vuec.userOnline, 'current', sessionsOn || 0)
                            //vuec.$set(vuec.userOnline, 'max', sessionsMax || 0)
                        }
                    }
                });
                let signalrObj = {
                    check_session_loop: null,
                    check_state_loop: null,
                    start: function (fn) {
                        SJ.iwc.SignalR.start().done(function () {
                            console.log('started');
                            if (fn) {
                                fn();
                            }
                        });
                    },
                    check_session: function (fn) {
                        reHub.server.userOnlineStatus($dtl.cookies.get('mg_erp_auth') || '', document.title, navigator.userAgent).done(function () {
                            if (fn) {
                                fn();
                            }
                        });
                        console.log('session checked in ' + new Date());
                    },
                    check_notifi: function () {
                        //reHub.server.notificationCheck();
                    }
                };
                SJ.iwc.SignalR.on('connected', function () {
                    console.log('connected owned ' + SJ.iwc.SignalR.isConnectionOwner());
                    if (SJ.iwc.SignalR.isConnectionOwner()) {
                        signalrObj.check_session(function () {
                            //signalrObj.check_notifi();
                        });
                    }
                    if (!signalrObj.check_session_loop && SJ.iwc.SignalR.isConnectionOwner()) {
                        console.log('start sync this connection');
                        signalrObj.check_session_loop = setInterval(function () { signalrObj.check_session() }, 60000);
                    } else {
                        if (signalrObj.check_session_loop) {
                            clearInterval(signalrObj.check_session_loop);
                        }
                        signalrObj.check_session_loop = null;
                    }
                });
                SJ.iwc.SignalR.on('disconnected', function () {
                    console.log('disconnected')
                    if (signalrObj.check_session_loop) {
                        clearInterval(signalrObj.check_session_loop);
                        signalrObj.check_session_loop = null;
                        // console.log('end sync this connection')
                    }
                    if (SJ.iwc.SignalR.isConnectionOwner()) {
                        if (!signalrObj.check_state_loop) {
                            signalrObj.check_state_loop = setInterval(function () {
                                if (SJ.iwc.SignalR.getState() == 4) {
                                    console.log('try to connect again');
                                    signalrObj.start();
                                } else {
                                    clearInterval(signalrObj.check_state_loop);
                                    signalrObj.check_state_loop = null;
                                    console.log('clear reconnect');
                                }
                            }, 30000);
                        }
                    } else {
                        if (signalrObj.check_state_loop) {
                            clearInterval(signalrObj.check_state_loop);
                            signalrObj.check_state_loop = null;
                            console.log('clear reconnect');
                        }
                    }
                });
                signalrObj.start(function () {
                    if (!SJ.iwc.SignalR.isConnectionOwner()) {
                        signalrObj.check_session(function () {
                            //signalrObj.check_notifi();
                        });
                    }
                });
            },
            changeLanguage() {
                $confirm(this.ui.alert_leave_page, () => {
                    this.$refs.langSelector.openModal();

                });
            },
            selectUiLang(t) {
                $dtl.cookies.set('global_ui_lang', t, 365 * 10);
                window.location = window.location;
            },
            getPageName(menu_id) {
                return this.$refs.menu.getMenuText(menu_id);
            },
            setMenuCheckRights(b) {
                this.$refs.menu.$set(this.$refs.menu, 'checkRights', b);
                this.$refs.menu.createMenu();
            }
        },
        mounted() {
            this.signalR();
            this.$refs.langSelector.setSize('modal-sm');
        }
    });
</script>
<script id="template-re-appform" type="text/x-template">
    <div>
        <slot name="form-field">
        </slot>
        <div class="row" v-if="allBtnShow">
            @*<div class="col-md-12">
                    <div class="form-group">
                        <button class="btn btn-primary"><i class="fa fa-list"></i> Retrieve</button>
                        <button class="btn btn-info"><i class="fa fa-plus"></i> New</button>
                        <button class="btn btn-success"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-danger"><i class="fa fa-trash"></i> Delete</button>
                        <button class="btn btn-default"><i class="fa fa-print"></i> Print</button>
                        <button class="btn btn-warning"><i class="fa fa-ins"></i> Append Row</button>
                    </div>
                </div>*@
            <div class="col-sm-12">
                <div @*class="text-right"*@ class="form-group">
                    <button class="btn btn-fixed  btn-primary" v-bind:disabled="btnRetrieve.disabled" v-if="btnRetrieve.show" v-on:click="btnRetrieveClick"><i class="fa fa-list"></i>&nbsp;&nbsp;{{ui.retrieve == null ? "Retrieve" : ui.retrieve}}</button>
                    <button class="btn btn-fixed  btn-info" v-bind:disabled="btnNew.disabled || menuRights.IsReadOnly" v-if="btnNew.show" v-on:click="btnNewClick"><i class="fa fa-plus"></i>&nbsp;&nbsp;{{ui.new == null ? "New" : ui.new }}</button>
                    <button class="btn btn-fixed  btn-success" v-bind:disabled="btnSave.disabled || menuRights.IsReadOnly" v-if="btnSave.show" v-on:click="btnSaveClick"><i class="fa fa-save"></i>&nbsp;&nbsp;{{ui.save == null ? "Save" : ui.save}}</button>
                    <button class="btn btn-fixed  btn-danger" v-bind:disabled="btnDelete.disabled || menuRights.IsReadOnly" v-if="btnDelete.show" v-on:click="btnDeleteClick"><i class="fa fa-trash"></i>&nbsp;&nbsp;{{ui.delete == null ? "Delete" : ui.delete}}</button>
                    <button class="btn btn-fixed  btn-secondary" v-bind:disabled="btnPrint.disabled || menuRights.IsNotPrint" v-if="btnPrint.show" v-on:click="btnPrintClick"><i class="fa fa-print"></i>&nbsp;&nbsp;{{ui.print == null ? "Print" : ui.print}}</button>
                    <button class="btn btn-fixed  btn-dark" v-bind:disabled="btnSaveAs.disabled || menuRights.IsNotSaveAs" v-if="btnSaveAs.show" v-on:click="btnSaveAsClick"><i class="fa fa-file-export"></i>&nbsp;&nbsp;{{ui.saveas == null ? "Export As" : ui.saveas}}</button>
                    <button class="btn btn-fixed  btn-primary" v-bind:disabled="btnSaveToExcel.disabled" v-if="btnSaveToExcel.show" v-on:click="btnSaveToExcelClick"><i class="fa fa-file-excel-o"></i> {{ ui.savetoexcel == null ? "Save to Excel" : ui.savetoexcel}}</button>
                    <button class="btn btn-fixed  btn-primary" v-bind:disabled="btnAddRow.disabled" v-if="btnAddRow.show" v-on:click="btnAddRowClick"><i class="fa fa-plus"></i>&nbsp;&nbsp;{{ ui.addrow == null ? "Add Row" : ui.addrow}}</button>
                    <button class="btn btn-fixed  btn-primary" v-bind:disabled="btnInsertRow.disabled" v-if="btnInsertRow.show" v-on:click="btnInsertRowClick"><i class="fa fa-plus"></i>&nbsp;&nbsp;{{ ui.insertrow == null ? "Insert Row" : ui.insertrow}}</button>
                </div>
            </div>
        </div>
        <slot name="form-detail">
        </slot>
    </div>
</script>
<script>
    Vue.component('re-appform', {
        template: '#template-re-appform',
        data() {
            return {
                btnRetrieve: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnNew: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnSave: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnSaveAs: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnDelete: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnPrint: {
                    show: true,
                    disabled: false,
                    click() { }
                },
                btnSaveToExcel: {
                    show: false,
                    disabled: false,
                    click() { }
                },
                btnAddRow: {
                    show: false,
                    disabled: false,
                    click() { }
                },
                btnInsertRow: {
                    show: false,
                    disabled: false,
                    click() { }
                },
                btnDeleteRow: {
                    show: false,
                    disabled: false,
                    click() { }
                },
                menuRights: "",
                ui: uiLang,
                allBtnShow: true,
                footer_show: false,
                panel_func: false,
            };
        },
        methods: {
            btnRetrieveClick() {
                this.btnRetrieve.click();
            },
            btnNewClick() {
                this.btnNew.click();
            },
            btnSaveClick() {
                this.btnSave.click();
            },
            btnSaveAsClick() {
                this.btnSaveAs.click();
            },
            btnDeleteClick() {
                this.btnDelete.click();
            },
            btnPrintClick() {
                this.btnPrint.click();
            },
            btnSaveToExcelClick() {
                this.btnSaveToExcel.click();
            },
            btnAddRowClick() {
                this.btnAddRow.click();
            },
            btnInsertRowClick() {
                this.btnInsertRow.click();
            },
            btnDeleteRowClick() {
                this.btnDeleteRow.click();
            },
            
        },
        mounted() {
            this.menuRights = menuRights === null ? "" : menuRights;
        }
    })
</script>
@Html.Partial("~/Views2/QCC/_qcc_menu.cshtml")